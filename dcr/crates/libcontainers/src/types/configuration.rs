use std::collections::HashMap;
use crate::types::mount::Mount;

/// Defines configuration options for executing a process inside a contained environment.
pub struct Configuration<'a> {
    no_pivot_root: bool,
    parent_death_signal: isize,
    root_fs: String,
    umask: &'a u32,
    readonly_fs: bool,
    root_propagation: isize,
    mounts: Vec<Mount<'a>>,
    devices: Vec<Device>,
    mount_label: String,
    hostname: String,
    domainname: String,
    namespaces: Namespaces,
    capabilities: * Capabilities,
    networks: [] * network,
    routes: [] * route,
    cgroups: * Cgroup,
    app_armor_profile: String,
    process_label: String,
    rlimits: []rlimit,
    oom_score_adj: * isize,
    uidmappings: []idmap,
    gidmappings: []idmap,
    mask_paths: []String,
    readonly_paths: []String,
    sysctl: HashMap<String, String>,
    seccomp: * Seccomp,
    no_new_privileges: bool,
    hooks: Hooks,
    version: String,
    labels: Vec<String>,
    no_new_keyring: bool,
    intel_rdt: * IntelRdt,
    rootless_euid: bool,
    rootless_cgroups: bool,
    time_offsets: HashMap<String, specs.linux_time_offset>,
    scheduler: * Scheduler,
    personality: * LinuxPersonality,
    iopriority: * IOPriority,
    exec_cpuaffinity: * CPUAffinity,
}